<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.framestudy.spring_mybatis.relationmag.mapper.PlayerMapper">
	
	<resultMap type="Player" id="playerMap">
		<id property="id" column="id" javaType="int"/>
		
		<!-- 看清了没有：property对应的是java中bean对象的属性，column对应的是数据库中列的名字 -->
		<result property="pName" column="player_name" javaType="java.lang.String"/>
											<!-- 这里这个id是什么id？中间表的id，也就是上面的player的id -->
		<collection property="games" javaType="java.util.List" column="id" fetchType="lazy" 
		select="getGamesByPlayerId"></collection>
	</resultMap>

	<select id="findPlayerById" resultType="Player">
		<!-- 看清楚了没有：as 前面是 数据库中查询的列名，as 后面是java中bean对象对应的属性名，自动将查询出来的数据映射到bean的对应属性上去！ -->
		select id as id,player_name as pName from t_player where id = #{id}
	</select>

	<insert id="playerChoiceGames">
		insert into t_player_game (fk_player_game, fk_game_player) values 
		<foreach collection="games" item="game" separator=",">
			(#{player.id},#{game.gId})
		</foreach>
	</insert>
	
	<select id="getPlayerWithGamesByPlayerName" resultMap="playerMap">
		select p.id, p.player_name from t_player p where player_name like CONCAT(#{name},'%')
	</select>
	
	<select id="getGamesByPlayerId" resultType="Game">
		
		<!-- select g.id,g.game_name from t_game g left join t_player_game pg on g.id = pg.fk_game_player  
		where fk_game_player = #{id} -->	<!-- Game 全部报空 -->
		
		select g.id as gId,g.game_name as gName from t_game g left join t_player_game pg on g.id = pg.fk_game_player  
		where fk_game_player = #{id}	<!-- 这里id的值是从哪里传过来的？？ -->
		
		<!-- 感觉 上面这样查出来的结果也不正确！！
			另外，没有定义Map映射，为什么也要写成g.id as gId, g.game_name as gName ？？
			再，为什么不能写成 select * 或者 select g.id,g.game_name ？？
		 -->
		
		
	</select>


</mapper>